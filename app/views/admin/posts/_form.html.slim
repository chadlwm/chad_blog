= simple_form_for [:admin, @post], html:{onsubmit: 'return getMarkdownContent(this)', id:'postEditorForm', class: 'form-horizontal'} do |f|
  - if @post.errors.any?
    div#error_explanation
      h2 = pluralize(@post.errors.count, "error")
        |prohibited this post from being saved:

      - @post.errors.full_messages.each do |message|
        li = message

  = f.input :title, input_html:{ class: 'form-control' }
  = f.input :slug, input_html:{ class: 'form-control' }

  = f.input :raw_content, wrapper_html:{style: 'display:none'}
  div#postEditor = convert_raw_content @post.raw_content

  = f.input :summary, input_html:{ class: 'form-control' }

  = f.input :tag_list, hint: 'tag list with separator of “,” ', input_html:{ class: 'form-control' }

  = f.input :column_id, label: "Column", collection: Column.order('id asc').map{|column| [column.name, column.id]}, selected: @post.column_id, input_html:{ class: 'form-control' }

  = f.input :cover, input_html:{ class: 'form-control' }

  = f.button :submit, data: { disable_with: "submitting..." }, class:"btn btn-primary", style: 'margin-top: 10px;'

javascript:
  $(document).ready(function(){
    $('#postEditor').markdownEditor({
      imageUpload: true,
      uploadPath: '/admin/images',
      preview: true,
      theme: 'tomorrow',
      theme_second: 'tomorrow_night',
      onPreview: function (content, callback) {
        $.ajax({
          url: '#{convert_admin_posts_path}',
          type: 'POST',
          dataType: 'html',
          data: {content: content},
        })
        .done(function(result) {
          callback(result);
        });
      }

    });
  });

  function getMarkdownContent(form){
    $("#post_raw_content").val($('#postEditor').markdownEditor('content'));
    return true;
  }